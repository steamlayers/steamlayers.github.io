<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Steam Layers: Web Development, MongoDB, Aggregation Framework</title>
    <link>https://steamlayers.com/</link>
    <description>Recent content on Steam Layers: Web Development, MongoDB, Aggregation Framework</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 Sep 2017 15:00:00 +0100</lastBuildDate>
    
	<atom:link href="https://steamlayers.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Better Software with Entity Systems</title>
      <link>https://steamlayers.com/better-software-with-entity-systems/</link>
      <pubDate>Sun, 24 Sep 2017 15:00:00 +0100</pubDate>
      
      <guid>https://steamlayers.com/better-software-with-entity-systems/</guid>
      <description>&lt;p&gt;In today’s post, I want to introduce you a concept called &lt;a href=&#34;https://en.wikipedia.org/wiki/Entity–component–system&#34;&gt;Entity-component System&lt;/a&gt; and to show how to use it for web development.
The idea is not new. In fact, it is widely used in game development. But I have never heard about it when talking about backend development and data modeling.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Aggregation Stages Availability Cheatsheet</title>
      <link>https://steamlayers.com/aggregation-stages-availability/</link>
      <pubDate>Thu, 18 May 2017 22:54:29 +0100</pubDate>
      
      <guid>https://steamlayers.com/aggregation-stages-availability/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Course Subscruption</title>
      <link>https://steamlayers.com/course/</link>
      <pubDate>Fri, 05 May 2017 22:54:29 +0100</pubDate>
      
      <guid>https://steamlayers.com/course/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Full Text Search using MongoDB</title>
      <link>https://steamlayers.com/full-text-search-using-mongodb/</link>
      <pubDate>Sat, 08 Apr 2017 21:02:17 +0200</pubDate>
      
      <guid>https://steamlayers.com/full-text-search-using-mongodb/</guid>
      <description>&lt;p&gt;If you build a web-service around content, then it is a matter of time when you need to introduce a search functionality.&lt;/p&gt;

&lt;p&gt;Depending on the shape of your data you may go the easiest way: search using a regular expression against some field (title, name, etc.). But what if you have more than one field? What if the data is spread across several collections? You would probably also want to have a &amp;lsquo;search rank,&amp;rsquo; i.e. to know how close the match is.&lt;/p&gt;

&lt;p&gt;This way the simple solution will not work anymore. Or it won&amp;rsquo;t be simple.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>